name: Streamlit RAG App CI/CD (Trivy + Deploy)

on:
  push:
    branches:
      - main

permissions:
  contents: read
  security-events: write

concurrency:
  group: deploy-main
  cancel-in-progress: true

jobs:
  # ====================================
  # üîç Security & Lint Scan Job
  # ====================================
  security-scan:
    name: Security Scan (Trivy + Lint)
    runs-on: self-hosted

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Verify Python version
        run: python3 --version

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Trivy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install -y trivy

      - name: Run Trivy full scan
        run: trivy fs --format table -o fs-report.json .

      - name: Gitleaks Installation
        run: sudo apt install gitleaks -y
      - name: Gitleaks Code Scan
        run: gitleaks detect source . -r gitleaks-report.json -f json

      - name: Lint and style check
        run: |
          pip install flake8
          flake8 . > flake8-report.txt || true

      - name: Upload lint report
        uses: actions/upload-artifact@v4
        with:
          name: flake8-report
          path: flake8-report.txt

  # ====================================
  # üöÄ Local Deploy Job
  # ====================================
  deploy:
    name: Deploy Streamlit App (Local)
    runs-on: self-hosted
    needs: security-scan  # ‚úÖ run only after scan

    env:
      COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
      PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up and launch Streamlit app
        run: |
          set -e
          echo "Stopping existing Streamlit app..."
          sudo fuser -k 8501/tcp || true

          echo "Setting up virtual environment..."
          python3 -m venv env
          source env/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

          echo "Starting Streamlit app..."
          nohup env COHERE_API_KEY="$COHERE_API_KEY" \
                    PINECONE_API_KEY="$PINECONE_API_KEY" \
                    streamlit run streamlit_ui.py > streamlit.log 2>&1 &

          sleep 5
          if curl -f http://localhost:8501 > /dev/null 2>&1; then
            echo "‚úÖ Streamlit app deployed successfully!"
          else
            echo "‚ö†Ô∏è Warning: Streamlit app may not have started yet."
          fi

